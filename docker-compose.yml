services:
  # web:
  #   build:
  #     context: ./backend
  #     dockerfile: ./src/SachkovTech.Web/Dockerfile
  #     args:
  #       NUGET_USERNAME: ${NUGET_USERNAME}
  #       NUGET_PASSWORD: ${NUGET_PASSWORD}
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #     - minio
  #     - seq
  #   restart: always
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Docker
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: sachkov_tech
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin_container_sachkov
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_SERVER_1_HOST: postgres
      PGADMIN_SERVER_1_PORT: 5434
      PGADMIN_SERVER_1_USERNAME: postgres
      PGADMIN_SERVER_1_PASSWORD: postgres
      PGADMIN_SERVER_1_DBNAME: sachkov_tech
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    restart: always
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongopassword
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    # volumes:
    #   - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - web
  #   restart: always

volumes:
  pgadmin:
  postgres-data:
  minio_data:
  mongo_data:
  # rabbitmq_data:
